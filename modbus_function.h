
#ifndef __INCLUDE_MODBUS_FUNCTION_H
#define __INCLUDE_MODBUS_FUNCTION_H

#ifdef __cplusplus
extern "C" {
#endif



typedef enum
{
	// Read Functions
	MODBUS_FUNCTION_READCOILS               = 0x01,
	MODBUS_FUNCTION_READDISCRETE            = 0x02,
	MODBUS_FUNCTION_READHOLDING             = 0x03,
	MODBUS_FUNCTION_READINPUT               = 0x04,

	// Write-Single Functions
	MODBUS_FUNCTION_WRITESINGLE_COIL        = 0x05,
	MODBUS_FUNCTION_WRITESINGLE_REG         = 0x06,

	// Write-Multiple Functions
	MODBUS_FUNCTION_WRITEMULT_COILS         = 0x0F,
	MODBUS_FUNCTION_WRITEMULT_REGS          = 0x10,

	MODBUS_FUNCTION_RWREG_MULT              = 0x17,
	MODBUS_FUNCTION_MSK_WRITEREG            = 0x16,
	MODBUS_FUNCTION_READFIFO                = 0x18,
	MODBUS_FUNCTION_READ_FILEREC            = 0x14,
	MODBUS_FUNCTION_WRITE_FILEREC           = 0x15,
	MODBUS_FUNCTION_READEXCEPTION           = 0x07,
	MODBUS_FUNCTION_DIAGNOSTIC              = 0x08,
	MODBUS_FUNCTION_GET_COMEVENTCTR         = 0x0B,
	MODBUS_FUNCTION_GET_COMEVENTLOG         = 0x0C,
	MODBUS_FUNCTION_REPORT_SLAVEID          = 0x11,
	MODBUS_FUNCTION_READ_DEVICEID           = 0x2B,
	MODBUS_FUNCTION_ENCAP_ITF_TRANSPORT     = 0x2B,
	MODBUS_FUNCTION_CANOPEN_GENREF          = 0x2B
} modbus_FunctionCode_e;



#define MODBUS_READ_BIT_MAX_QUANTITY		0x07D0
#define MODBUS_READ_REGISTER_MAX_QUANTITY	0x007D

#define MODBUS_WRITE_BIT_MAX_QUANTITY		0x07B0
#define MODBUS_WRITE_REGISTER_MAX_QUANTITY	0x007B

#define MODBUS_BIT_ON						0xFF00
#define MODBUS_BIT_OFF						0x0000



#ifdef __cplusplus
}
#endif

#endif /* __INCLUDE_MODBUS_FUNCTION_H */
